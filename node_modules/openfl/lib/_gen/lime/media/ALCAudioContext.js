// Class: lime.media.ALCAudioContext

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../hxClasses_stub").default;
var $import = require("./../../import_stub").default;
function lime_media_openal_ALC() {return require("./../../lime/media/openal/ALC");}

// Constructor

var ALCAudioContext = function() {
	this.ALL_DEVICES_SPECIFIER = 4115;
	this.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
	this.ENUMERATE_ALL_EXT = 1;
	this.EXTENSIONS = 4102;
	this.DEVICE_SPECIFIER = 4101;
	this.DEFAULT_DEVICE_SPECIFIER = 4100;
	this.ALL_ATTRIBUTES = 4099;
	this.ATTRIBUTES_SIZE = 4098;
	this.OUT_OF_MEMORY = 40965;
	this.INVALID_VALUE = 40964;
	this.INVALID_ENUM = 40963;
	this.INVALID_CONTEXT = 40962;
	this.INVALID_DEVICE = 40961;
	this.NO_ERROR = 0;
	this.STEREO_SOURCES = 4113;
	this.MONO_SOURCES = 4112;
	this.SYNC = 4105;
	this.REFRESH = 4104;
	this.FREQUENCY = 4103;
	this.TRUE = 1;
	this.FALSE = 0;
}

// Meta

ALCAudioContext.__name__ = ["lime","media","ALCAudioContext"];
ALCAudioContext.prototype = {
	closeDevice: function(device) {
		return (lime_media_openal_ALC().default).closeDevice(device);
	},
	createContext: function(device,attrlist) {
		return (lime_media_openal_ALC().default).createContext(device,attrlist);
	},
	destroyContext: function(context) {
		(lime_media_openal_ALC().default).destroyContext(context);
	},
	getContextsDevice: function(context) {
		return (lime_media_openal_ALC().default).getContextsDevice(context);
	},
	getCurrentContext: function() {
		return (lime_media_openal_ALC().default).getCurrentContext();
	},
	getError: function(device) {
		return (lime_media_openal_ALC().default).getError(device);
	},
	getErrorString: function(device) {
		return (lime_media_openal_ALC().default).getErrorString(device);
	},
	getIntegerv: function(device,param,count) {
		if(count == null) {
			count = 1;
		}
		return (lime_media_openal_ALC().default).getIntegerv(device,param,count);
	},
	getString: function(device,param) {
		return (lime_media_openal_ALC().default).getString(device,param);
	},
	makeContextCurrent: function(context) {
		return (lime_media_openal_ALC().default).makeContextCurrent(context);
	},
	openDevice: function(deviceName) {
		return (lime_media_openal_ALC().default).openDevice(deviceName);
	},
	pauseDevice: function(device) {
		(lime_media_openal_ALC().default).pauseDevice(device);
	},
	processContext: function(context) {
		(lime_media_openal_ALC().default).processContext(context);
	},
	resumeDevice: function(device) {
		(lime_media_openal_ALC().default).resumeDevice(device);
	},
	suspendContext: function(context) {
		(lime_media_openal_ALC().default).suspendContext(context);
	}
};
ALCAudioContext.prototype.__class__ = $hxClasses["lime.media.ALCAudioContext"] = ALCAudioContext;

// Init



// Statics




// Export

exports.default = ALCAudioContext;