// Class: lime.graphics.ConsoleRenderContext

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../hxClasses_stub").default;
var $import = require("./../../import_stub").default;
function lime_graphics_console_IndexBuffer() {return require("./../../lime/graphics/console/IndexBuffer");}
function lime_graphics_console_VertexBuffer() {return require("./../../lime/graphics/console/VertexBuffer");}
function lime_graphics_console_Shader() {return require("./../../lime/graphics/console/Shader");}

// Constructor

var ConsoleRenderContext = function() {
}

// Meta

ConsoleRenderContext.__name__ = ["lime","graphics","ConsoleRenderContext"];
ConsoleRenderContext.prototype = {
	createIndexBuffer: function(indices,count) {
		return new (lime_graphics_console_IndexBuffer().default)();
	},
	createVertexBuffer: function(decl,count) {
		return new (lime_graphics_console_VertexBuffer().default)();
	},
	lookupShader: function(name) {
		return new (lime_graphics_console_Shader().default)();
	},
	clear: function(r,g,b,a,depth,stencil) {
		if(stencil == null) {
			stencil = 0;
		}
		if(depth == null) {
			depth = 1.0;
		}
	},
	bindShader: function(shader) {
	},
	setViewport: function(x,y,width,height,nearPlane,farPlane) {
		if(farPlane == null) {
			farPlane = 1.0;
		}
		if(nearPlane == null) {
			nearPlane = 0.0;
		}
	},
	setVertexShaderConstantF: function(startRegister,vec4,vec4count) {
	},
	setVertexSource: function(vb) {
	},
	setIndexSource: function(ib) {
	},
	draw: function(primitive,startVertex,primitiveCount) {
	},
	drawIndexed: function(primitive,vertexCount,startIndex,primitiveCount) {
	},
	get_width: function() {
		return 0;
	},
	get_height: function() {
		return 0;
	}
};
ConsoleRenderContext.prototype.__class__ = $hxClasses["lime.graphics.ConsoleRenderContext"] = ConsoleRenderContext;

// Init



// Statics




// Export

exports.default = ConsoleRenderContext;