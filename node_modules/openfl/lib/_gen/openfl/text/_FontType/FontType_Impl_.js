// Class: openfl.text._FontType.FontType_Impl_

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../hxClasses_stub").default;

// Constructor

var FontType_Impl_ = function(){}

// Meta

FontType_Impl_.__name__ = ["openfl","text","_FontType","FontType_Impl_"];
FontType_Impl_.prototype = {
	
};
FontType_Impl_.prototype.__class__ = $hxClasses["openfl.text._FontType.FontType_Impl_"] = FontType_Impl_;

// Init



// Statics

FontType_Impl_.fromString = function(value) {
	switch(value) {
	case "device":
		return 0;
	case "embedded":
		return 1;
	case "embeddedCFF":
		return 2;
	default:
		return null;
	}
}
FontType_Impl_.toString = function(value) {
	switch(value) {
	case 0:
		return "device";
	case 1:
		return "embedded";
	case 2:
		return "embeddedCFF";
	default:
		return null;
	}
}
FontType_Impl_.DEVICE = 0
FontType_Impl_.EMBEDDED = 1
FontType_Impl_.EMBEDDED_CFF = 2

// Export

exports.default = FontType_Impl_;