// Class: openfl.desktop._ClipboardFormats.ClipboardFormats_Impl_

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../hxClasses_stub").default;

// Constructor

var ClipboardFormats_Impl_ = function(){}

// Meta

ClipboardFormats_Impl_.__name__ = ["openfl","desktop","_ClipboardFormats","ClipboardFormats_Impl_"];
ClipboardFormats_Impl_.prototype = {
	
};
ClipboardFormats_Impl_.prototype.__class__ = $hxClasses["openfl.desktop._ClipboardFormats.ClipboardFormats_Impl_"] = ClipboardFormats_Impl_;

// Init



// Statics

ClipboardFormats_Impl_.fromString = function(value) {
	switch(value) {
	case "air:html":
		return 0;
	case "air:rtf":
		return 1;
	case "air:text":
		return 2;
	default:
		return null;
	}
}
ClipboardFormats_Impl_.toString = function(value) {
	switch(value) {
	case 0:
		return "air:html";
	case 1:
		return "air:rtf";
	case 2:
		return "air:text";
	default:
		return null;
	}
}
ClipboardFormats_Impl_.HTML_FORMAT = 0
ClipboardFormats_Impl_.RICH_TEXT_FORMAT = 1
ClipboardFormats_Impl_.TEXT_FORMAT = 2

// Export

exports.default = ClipboardFormats_Impl_;