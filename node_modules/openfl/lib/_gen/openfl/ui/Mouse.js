// Class: openfl.ui.Mouse

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../hxClasses_stub").default;
var $import = require("./../../import_stub").default;
function lime_ui_Mouse() {return require("./../../lime/ui/Mouse");}
function lime_ui_MouseCursor() {return require("./../../lime/ui/MouseCursor");}

// Constructor

var Mouse = function(){}

// Meta

Mouse.__name__ = ["openfl","ui","Mouse"];
Mouse.prototype = {
	
};
Mouse.prototype.__class__ = $hxClasses["openfl.ui.Mouse"] = Mouse;

// Init

Object.defineProperty(Mouse,"cursor",{ get : function() {
	return Mouse.get_cursor();
}, set : function(value) {
	return Mouse.set_cursor(value);
}});

// Statics

Mouse.hide = function() {
	(lime_ui_Mouse().default).hide();
}
Mouse.show = function() {
	(lime_ui_Mouse().default).show();
}
Mouse.get_cursor = function() {
	return Mouse.__cursor;
}
Mouse.set_cursor = function(value) {
	switch(value) {
	case "arrow":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).ARROW);
		break;
	case "button":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).POINTER);
		break;
	case "crosshair":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).CROSSHAIR);
		break;
	case "custom":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).CUSTOM);
		break;
	case "hand":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).MOVE);
		break;
	case "ibeam":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).TEXT);
		break;
	case "resize_nesw":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).RESIZE_NESW);
		break;
	case "resize_ns":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).RESIZE_NS);
		break;
	case "resize_nwse":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).RESIZE_NWSE);
		break;
	case "resize_we":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).RESIZE_WE);
		break;
	case "wait":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).WAIT);
		break;
	case "waitarrow":
		(lime_ui_Mouse().default).set_cursor((lime_ui_MouseCursor().default).WAIT_ARROW);
		break;
	default:
	}
	return Mouse.__cursor = value;
}
Mouse.supportsCursor = true
Mouse.supportsNativeCursor = true
Mouse.__cursor = "auto"

// Export

exports.default = Mouse;