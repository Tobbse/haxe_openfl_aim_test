// Class: openfl.geom.Utils3D

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../hxClasses_stub").default;
var $import = require("./../../import_stub").default;
function openfl_geom_Vector3D() {return require("./../../openfl/geom/Vector3D");}

// Constructor

var Utils3D = function(){}

// Meta

Utils3D.__name__ = ["openfl","geom","Utils3D"];
Utils3D.prototype = {
	
};
Utils3D.prototype.__class__ = $hxClasses["openfl.geom.Utils3D"] = Utils3D;

// Init



// Statics

Utils3D.projectVector = function(m,v) {
	var n = m.rawData;
	var l_oProj = new (openfl_geom_Vector3D().default)();
	l_oProj.x = v.x * n.get(0) + v.y * n.get(4) + v.z * n.get(8) + n.get(12);
	l_oProj.y = v.x * n.get(1) + v.y * n.get(5) + v.z * n.get(9) + n.get(13);
	l_oProj.z = v.x * n.get(2) + v.y * n.get(6) + v.z * n.get(10) + n.get(14);
	var w = v.x * n.get(3) + v.y * n.get(7) + v.z * n.get(11) + n.get(15);
	l_oProj.z /= w;
	l_oProj.x /= w;
	l_oProj.y /= w;
	return l_oProj;
}
Utils3D.projectVectors = function(m,verts,projectedVerts,uvts) {
	if(verts.get_length() % 3 != 0) {
		return;
	}
	var n = m.rawData;
	var x;
	var y;
	var z;
	var w;
	var x1;
	var y1;
	var z1;
	var w1;
	var i = 0;
	while(i < verts.get_length()) {
		x = verts.get(i);
		y = verts.get(i + 1);
		z = verts.get(i + 2);
		w = 1;
		x1 = x * n.get(0) + y * n.get(4) + z * n.get(8) + w * n.get(12);
		y1 = x * n.get(1) + y * n.get(5) + z * n.get(9) + w * n.get(13);
		z1 = x * n.get(2) + y * n.get(6) + z * n.get(10) + w * n.get(14);
		w1 = x * n.get(3) + y * n.get(7) + z * n.get(11) + w * n.get(15);
		projectedVerts.push(x1 / w1);
		projectedVerts.push(y1 / w1);
		uvts.set(i + 2,1 / w1);
		i += 3;
	}
}


// Export

exports.default = Utils3D;