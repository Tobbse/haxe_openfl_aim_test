// Class: openfl._internal.renderer.canvas.CanvasShape

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../../hxClasses_stub").default;
var $import = require("./../../../../import_stub").default;
function openfl__$internal_renderer_canvas_CanvasGraphics() {return require("./../../../../openfl/_internal/renderer/canvas/CanvasGraphics");}
function Std() {return require("./../../../../Std");}
function lime_graphics_RendererType() {return require("./../../../../lime/graphics/RendererType");}
function openfl__$internal_renderer_canvas_CanvasRenderer() {return require("./../../../../openfl/_internal/renderer/canvas/CanvasRenderer");}

// Constructor

var CanvasShape = function(){}

// Meta

CanvasShape.__name__ = ["openfl","_internal","renderer","canvas","CanvasShape"];
CanvasShape.prototype = {
	
};
CanvasShape.prototype.__class__ = $hxClasses["openfl._internal.renderer.canvas.CanvasShape"] = CanvasShape;

// Init



// Statics

CanvasShape.render = function(shape,renderSession) {
	if(!shape.__renderable || shape.__worldAlpha <= 0) {
		return;
	}
	var graphics = shape.__graphics;
	if(graphics != null) {
		(openfl__$internal_renderer_canvas_CanvasGraphics().default).render(graphics,renderSession,shape.__renderTransform);
		var bounds = graphics.__bounds;
		var width = graphics.__width;
		var height = graphics.__height;
		if(graphics.__canvas != null) {
			var context = renderSession.context;
			var scrollRect = shape.__scrollRect;
			if(width > 0 && height > 0 && (scrollRect == null || scrollRect.width > 0 && scrollRect.height > 0)) {
				renderSession.blendModeManager.setBlendMode(shape.__worldBlendMode);
				renderSession.maskManager.pushObject(shape);
				context.globalAlpha = shape.__worldAlpha;
				var transform = graphics.__worldTransform;
				if(renderSession.roundPixels) {
					context.setTransform(transform.a,transform.b,transform.c,transform.d,(Std().default)["int"](transform.tx),(Std().default)["int"](transform.ty));
				} else {
					context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
				}
				if(renderSession.renderType == (lime_graphics_RendererType().default).DOM) {
					var reverseScale = 1 / (openfl__$internal_renderer_canvas_CanvasRenderer().default).scale;
					context.scale(reverseScale,reverseScale);
				}
				context.drawImage(graphics.__canvas,0,0);
				renderSession.maskManager.popObject(shape);
			}
		}
	}
}


// Export

exports.default = CanvasShape;