// Class: openfl._internal.renderer.canvas.CanvasMaskManager

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../../hxClasses_stub").default;
var $import = require("./../../../../import_stub").default;
var $extend = require("./../../../../extend_stub").default;
function openfl__$internal_renderer_AbstractMaskManager() {return require("./../../../../openfl/_internal/renderer/AbstractMaskManager");}

// Constructor

var CanvasMaskManager = function(renderSession) {
	(openfl__$internal_renderer_AbstractMaskManager().default).call(this,renderSession);
}

// Meta

CanvasMaskManager.__name__ = ["openfl","_internal","renderer","canvas","CanvasMaskManager"];
CanvasMaskManager.__super__ = (openfl__$internal_renderer_AbstractMaskManager().default);
CanvasMaskManager.prototype = $extend((openfl__$internal_renderer_AbstractMaskManager().default).prototype, {
	pushMask: function(mask) {
		var context = this.renderSession.context;
		context.save();
		var transform = mask.__getRenderTransform();
		context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.beginPath();
		mask.__renderCanvasMask(this.renderSession);
		context.clip();
	},
	pushObject: function(object,handleScrollRect) {
		if(handleScrollRect == null) {
			handleScrollRect = true;
		}
		if(handleScrollRect && object.__scrollRect != null) {
			this.pushRect(object.__scrollRect,object.__renderTransform);
		}
		if(!object.__cacheBitmapRender && object.__mask != null) {
			this.pushMask(object.__mask);
		}
	},
	pushRect: function(rect,transform) {
		var context = this.renderSession.context;
		context.save();
		context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.beginPath();
		context.rect(rect.x,rect.y,rect.width,rect.height);
		context.clip();
	},
	popMask: function() {
		this.renderSession.context.restore();
	},
	popObject: function(object,handleScrollRect) {
		if(handleScrollRect == null) {
			handleScrollRect = true;
		}
		if(!object.__cacheBitmapRender && object.__mask != null) {
			this.popMask();
		}
		if(handleScrollRect && object.__scrollRect != null) {
			this.popRect();
		}
	},
	popRect: function() {
		this.renderSession.context.restore();
	}
});
CanvasMaskManager.prototype.__class__ = $hxClasses["openfl._internal.renderer.canvas.CanvasMaskManager"] = CanvasMaskManager;

// Init



// Statics




// Export

exports.default = CanvasMaskManager;