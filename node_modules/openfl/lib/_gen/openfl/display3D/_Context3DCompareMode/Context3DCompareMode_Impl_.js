// Class: openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../hxClasses_stub").default;

// Constructor

var Context3DCompareMode_Impl_ = function(){}

// Meta

Context3DCompareMode_Impl_.__name__ = ["openfl","display3D","_Context3DCompareMode","Context3DCompareMode_Impl_"];
Context3DCompareMode_Impl_.prototype = {
	
};
Context3DCompareMode_Impl_.prototype.__class__ = $hxClasses["openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_"] = Context3DCompareMode_Impl_;

// Init



// Statics

Context3DCompareMode_Impl_.fromString = function(value) {
	switch(value) {
	case "always":
		return 0;
	case "equal":
		return 1;
	case "greater":
		return 2;
	case "greaterEqual":
		return 3;
	case "less":
		return 4;
	case "lessEqual":
		return 5;
	case "never":
		return 6;
	case "notEqual":
		return 7;
	default:
		return null;
	}
}
Context3DCompareMode_Impl_.toString = function(value) {
	switch(value) {
	case 0:
		return "always";
	case 1:
		return "equal";
	case 2:
		return "greater";
	case 3:
		return "greaterEqual";
	case 4:
		return "less";
	case 5:
		return "lessEqual";
	case 6:
		return "never";
	case 7:
		return "notEqual";
	default:
		return null;
	}
}
Context3DCompareMode_Impl_.ALWAYS = 0
Context3DCompareMode_Impl_.EQUAL = 1
Context3DCompareMode_Impl_.GREATER = 2
Context3DCompareMode_Impl_.GREATER_EQUAL = 3
Context3DCompareMode_Impl_.LESS = 4
Context3DCompareMode_Impl_.LESS_EQUAL = 5
Context3DCompareMode_Impl_.NEVER = 6
Context3DCompareMode_Impl_.NOT_EQUAL = 7

// Export

exports.default = Context3DCompareMode_Impl_;