// Class: openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../hxClasses_stub").default;

// Constructor

var Context3DTextureFormat_Impl_ = function(){}

// Meta

Context3DTextureFormat_Impl_.__name__ = ["openfl","display3D","_Context3DTextureFormat","Context3DTextureFormat_Impl_"];
Context3DTextureFormat_Impl_.prototype = {
	
};
Context3DTextureFormat_Impl_.prototype.__class__ = $hxClasses["openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_"] = Context3DTextureFormat_Impl_;

// Init



// Statics

Context3DTextureFormat_Impl_.fromString = function(value) {
	switch(value) {
	case "bgrPacked565":
		return 0;
	case "bgra":
		return 1;
	case "bgraPacked4444":
		return 2;
	case "compressed":
		return 3;
	case "compressedAlpha":
		return 4;
	case "rgbaHalfFloat":
		return 5;
	default:
		return null;
	}
}
Context3DTextureFormat_Impl_.toString = function(value) {
	switch(value) {
	case 0:
		return "bgrPacked565";
	case 1:
		return "bgra";
	case 2:
		return "bgraPacked4444";
	case 3:
		return "compressed";
	case 4:
		return "compressedAlpha";
	case 5:
		return "rgbaHalfFloat";
	default:
		return null;
	}
}
Context3DTextureFormat_Impl_.BGR_PACKED = 0
Context3DTextureFormat_Impl_.BGRA = 1
Context3DTextureFormat_Impl_.BGRA_PACKED = 2
Context3DTextureFormat_Impl_.COMPRESSED = 3
Context3DTextureFormat_Impl_.COMPRESSED_ALPHA = 4
Context3DTextureFormat_Impl_.RGBA_HALF_FLOAT = 5

// Export

exports.default = Context3DTextureFormat_Impl_;