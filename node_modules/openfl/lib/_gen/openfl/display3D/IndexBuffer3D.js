// Class: openfl.display3D.IndexBuffer3D

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../hxClasses_stub").default;
var $import = require("./../../import_stub").default;
function openfl__$internal_stage3D_opengl_GLIndexBuffer3D() {return require("./../../openfl/_internal/stage3D/opengl/GLIndexBuffer3D");}

// Constructor

var IndexBuffer3D = function(context3D,numIndices,bufferUsage) {
	this.__context = context3D;
	this.__numIndices = numIndices;
	(openfl__$internal_stage3D_opengl_GLIndexBuffer3D().default).create(this,this.__context.__renderSession,bufferUsage);
}

// Meta

IndexBuffer3D.__name__ = ["openfl","display3D","IndexBuffer3D"];
IndexBuffer3D.prototype = {
	dispose: function() {
		(openfl__$internal_stage3D_opengl_GLIndexBuffer3D().default).dispose(this,this.__context.__renderSession);
	},
	uploadFromByteArray: function(data,byteArrayOffset,startOffset,count) {
		(openfl__$internal_stage3D_opengl_GLIndexBuffer3D().default).uploadFromByteArray(this,this.__context.__renderSession,data,byteArrayOffset,startOffset,count);
	},
	uploadFromTypedArray: function(data,byteLength) {
		if(byteLength == null) {
			byteLength = -1;
		}
		(openfl__$internal_stage3D_opengl_GLIndexBuffer3D().default).uploadFromTypedArray(this,this.__context.__renderSession,data);
	},
	uploadFromVector: function(data,startOffset,count) {
		(openfl__$internal_stage3D_opengl_GLIndexBuffer3D().default).uploadFromVector(this,this.__context.__renderSession,data,startOffset,count);
	}
};
IndexBuffer3D.prototype.__class__ = $hxClasses["openfl.display3D.IndexBuffer3D"] = IndexBuffer3D;

// Init



// Statics




// Export

exports.default = IndexBuffer3D;