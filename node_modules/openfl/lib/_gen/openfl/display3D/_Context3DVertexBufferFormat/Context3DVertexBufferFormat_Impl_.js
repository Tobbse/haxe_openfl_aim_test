// Class: openfl.display3D._Context3DVertexBufferFormat.Context3DVertexBufferFormat_Impl_

var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this

$global.Object.defineProperty(exports, "__esModule", {value: true});

var __map_reserved = {};

// Imports

var $hxClasses = require("./../../../hxClasses_stub").default;

// Constructor

var Context3DVertexBufferFormat_Impl_ = function(){}

// Meta

Context3DVertexBufferFormat_Impl_.__name__ = ["openfl","display3D","_Context3DVertexBufferFormat","Context3DVertexBufferFormat_Impl_"];
Context3DVertexBufferFormat_Impl_.prototype = {
	
};
Context3DVertexBufferFormat_Impl_.prototype.__class__ = $hxClasses["openfl.display3D._Context3DVertexBufferFormat.Context3DVertexBufferFormat_Impl_"] = Context3DVertexBufferFormat_Impl_;

// Init



// Statics

Context3DVertexBufferFormat_Impl_.fromString = function(value) {
	switch(value) {
	case "bytes4":
		return 0;
	case "float1":
		return 1;
	case "float2":
		return 2;
	case "float3":
		return 3;
	case "float4":
		return 4;
	default:
		return null;
	}
}
Context3DVertexBufferFormat_Impl_.toString = function(value) {
	switch(value) {
	case 0:
		return "bytes4";
	case 1:
		return "float1";
	case 2:
		return "float2";
	case 3:
		return "float3";
	case 4:
		return "float4";
	default:
		return null;
	}
}
Context3DVertexBufferFormat_Impl_.BYTES_4 = 0
Context3DVertexBufferFormat_Impl_.FLOAT_1 = 1
Context3DVertexBufferFormat_Impl_.FLOAT_2 = 2
Context3DVertexBufferFormat_Impl_.FLOAT_3 = 3
Context3DVertexBufferFormat_Impl_.FLOAT_4 = 4

// Export

exports.default = Context3DVertexBufferFormat_Impl_;